#!/bin/sh
# Shell utility for colorscheme and wallpaper selection with wallust.
# Version 1.1
#
# Copyright (C) 2025 Alessandro Rizzoni
# This software is licensed under the terms of the MIT License.

# TO-DO: split _chwal function into:
#       get current wallpaper
#       pick new wallpaper
#       apply wallpaper
#               pre hook
#               post hook
#       cache wallpaper

# TO-DO: split _chwal_mkwal function into:
#       get current wallpaper
#       mark wallpaper

# TO-DO: split _chwal_new_wallpaper
#       get/list wallpapers > file list
#       select random wallpaper < file list

# TO-DO: split main function into
#       check requirements function
#       parse args "$@"
#       dispatch (decide what to do based on flags or arguments)

# TO-DO: refactor hook logic into
#       _chwal_run_hook "$HOOK_PATH" "$NEW" "$OLD"

# _chwal_chwal() {
#     OLD_WALLPAPER=$(_chwal_get_current_wallpaper)
#     NEW_WALLPAPER=$(_chwal_pick_wallpaper) || return 1
#
#     _chwal_pre_hook "$NEW_WALLPAPER" "$OLD_WALLPAPER"
#
#     if _chwal_apply_wallpaper "$NEW_WALLPAPER"; then
#         _chwal_cache_wallpaper "$NEW_WALLPAPER"
#     else
#         printf 'Failed to apply wallpaper: %s\n' "$NEW_WALLPAPER" >&2
#         return 1
#     fi
#     _chwal_post_hook "$NEW_WALLPAPER" "$OLD_WALLPAPER"
#     return 0
# }

#------------------------------------------------------------------------------#

# CORE LOGIC
# _chwal_get_current_wallpaper
# _chwal_pick_wallpaper
# _chwal_apply_wallpaper
# _chwal_cache_wallpaper
# _chwal_run_hook

# USER INTERFACE
# _chwal_main       # Entry point
# _chwal_chwal      # Full workflow (pre, run, post)
# _chwal_mkwal      # Mark current wallpaper
# _chwal_ldwal      # Preload wallpapers with wallust

# SETUP & VALIDATION
# _chwal_check_requirements
# _chwal_parse_args "$@"
# _chwal_dispatch

_chwal_version() {
    printf 'Shell utility for colorscheme and wallpaper selection with wallust.\n'
    printf 'Version 1.1\n'
    return 0
}

_chwal_help() {
    _chwal_version
    cat << EOF

Usage: chwal [OPTIONS]

Options:
  -d, --dir DIR         Specify the wallpaper directory
  -h, --help            Show this help message
  -l, --load            Pre-load themes for images in the wallpaper directory
  -p, --pre PRE_HOOK    Specify a script to run before changing the wallpaper
  -P, --post POST_HOOK  Specify a script to run after changing the wallpaper
  -m, --mark            Mark the current wallpaper
  -V, --version         Show the version of the script

EOF
    return 0
}

_chwal_mkwal() {
    # Mark the current wallpaper for removal
    if [ -f "$WALLPAPER_PATH" ]; then
        printf '%s\n' "$WALLPAPER_PATH" >> "$MKWAL_FILE"
    else
        printf 'Error: No current wallpaper cached.' >&2
        return 1
    fi
    return 0
}

_chwal_ldwal() {
    max_jobs=4
    set -- # Use this to hold the list of PIDs

    find "$WALLPAPER_DIR" -type f | while IFS= read -r file; do
        wallust run --quiet --skip-sequences --skip-templates "$file" &
        pid=$!
        # this is super janky and will break if $pid is empty or malformed
        # TODO fix this
        set -- "$@" "$pid"

        # Count current jobs
        job_count=$#
        if [ "$job_count" -ge "$max_jobs" ]; then
            wait "$1" # Wait for the first job to finish
            shift     # Remove it from the list
        fi
    done

    # Wait for any remaining jobs
    for pid; do
        wait "$pid"
    done
}

_chwal_pre_hook() {
    if [ -n "$PRE_HOOK" ] && [ -x "$PRE_HOOK" ]; then
        "$PRE_HOOK" "$1" "$2"
    fi
    return 0
}

_chwal_post_hook() {
    if [ -n "$POST_HOOK" ] && [ -x "$POST_HOOK" ]; then
        "$POST_HOOK" "$1" "$2"
    fi
    return 0
}

_chwal_new_wallpaper() {

    tmpfile=$(mktemp "${TMPDIR:-/tmp}/chwal.XXXXXXXXXX") || exit 1

    cleanup() {
        rm -f "$tmpfile"
    }

    trap cleanup 0

    count=0
    selected=""

    # Run find and redirect its output into the while loop
    find "$WALLPAPER_DIR" -type f > "$tmpfile"

    # Now read the file line-by-line and count
    while IFS= read -r line; do
        count=$((count + 1))

        # fallback if %N unsupported
        now=$(date +%s%N 2> /dev/null || date +%s)
        rand=$((now % count))

        # If the random number mod count is 0, select this line
        if [ $((rand % count)) -eq 0 ]; then
            selected="$line"
        fi
    done < "$tmpfile"

    if [ -z "$selected" ]; then
        printf 'No files found in the wallpaper directory.\n' >&2
        return 1
    fi

    printf '%s\n' "$selected"

    return 0
}

_chwal_chwal() {
    OLD_WALLPAPER=""
    if [ -f "$WALLPAPER_PATH" ]; then
        read -r OLD_WALLPAPER < "$WALLPAPER_PATH"
    fi

    # Exclude the current wallpaper's full path from selection
    NEW_WALLPAPER=$(_chwal_new_wallpaper) || return 1

    _chwal_pre_hook "$NEW_WALLPAPER" "$OLD_WALLPAPER"

    # Generate the themes
    wallust run --quiet "$NEW_WALLPAPER" \
        &&
        # Cache the wallpaper
        printf '%s' "$NEW_WALLPAPER" > "$WALLPAPER_PATH"

    _chwal_post_hook "$NEW_WALLPAPER" "$OLD_WALLPAPER"

    return 0
}

_chwal_main() {
    # Check required commands
    if ! command -v wallust > /dev/null 2>&1; then
        printf 'Error: Required program %s not found.\n' "wallust" >&2
        exit 1
    fi

    # Define default directories
    WALLPAPER_DIR='/usr/share/backgrounds'
    CHWAL_CACHE_HOME="${XDG_CACHE_HOME:-$HOME/.cache}/chwal"
    WALLUST_CACHE_HOME="${XDG_CACHE_HOME:-$HOME/.cache}/wallust"
    WALLPAPER_PATH="$WALLUST_CACHE_HOME/path"
    MKWAL_FILE="$CHWAL_CACHE_HOME/marks.txt"
    mkdir -p "$CHWAL_CACHE_HOME"

    # Initialize flags
    SHOW_VERSION=0
    SHOW_HELP=0
    RUN_LDWAL=0
    RUN_MKWAL=0

    # Process args
    while [ $# -gt 0 ]; do
        case "$1" in
            -d | --dir | --directory)
                WALLPAPER_DIR="$2"
                shift 2
                ;;
            -h | --help)
                SHOW_HELP=1
                shift
                ;;
            -l | --load)
                RUN_LDWAL=1
                shift
                ;;
            -m | --mark)
                RUN_MKWAL=1
                shift
                ;;
            -V | --version)
                SHOW_VERSION=1
                shift
                ;;
            -p | --pre | --pre-hook)
                PRE_HOOK="$2"
                shift 2
                ;;
            -P | --post | --post-hook)
                POST_HOOK="$2"
                shift 2
                ;;
            *)
                printf "Error: Invalid option %s\n" "$1" >&2
                _chwal_help
                exit 2
                ;;
        esac
    done

    # Process flags
    if [ "$SHOW_HELP" -eq 1 ]; then
        _chwal_help
    fi

    if [ "$SHOW_VERSION" -eq 1 ]; then
        _chwal_version
    fi

    # Check if wallpaper directory exists, if not abort
    if [ ! -d "$WALLPAPER_DIR" ]; then
        printf 'Error: Wallpaper directory %s could not be found.' "$WALLPAPER_DIR" >&2
        exit 1
    fi

    if [ "$RUN_MKWAL" -eq 1 ]; then
        _chwal_mkwal
    fi

    if [ "$SHOW_HELP" -eq 0 ] && [ "$SHOW_VERSION" -eq 0 ] \
        && [ "$RUN_LDWAL" -eq 0 ] && [ "$RUN_MKWAL" -eq 0 ]; then
        _chwal_chwal
    fi

    if [ "$RUN_LDWAL" -eq 1 ]; then
        _chwal_ldwal
    fi

    exit 0
}

_chwal_main "$@"
